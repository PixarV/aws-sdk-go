// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package paas

import (
	"fmt"

	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/awsutil"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/private/protocol"
	"github.com/aws/aws-sdk-go/private/protocol/restjson"
)

const opCreateService = "CreateService"

// CreateServiceRequest generates a "aws/request.Request" representing the
// client's request for the CreateService operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateService for more information on using the CreateService
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//	// Example sending a request using the CreateServiceRequest method.
//	req, resp := client.CreateServiceRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/paas-2022-09-06/CreateService
func (c *PaaS) CreateServiceRequest(input *CreateServiceInput) (req *request.Request, output *CreateServiceOutput) {
	op := &request.Operation{
		Name:       opCreateService,
		HTTPMethod: "POST",
		HTTPPath:   "/services",
	}

	if input == nil {
		input = &CreateServiceInput{}
	}

	output = &CreateServiceOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CreateService API operation for AWS PaaS.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS PaaS's
// API operation CreateService for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/paas-2022-09-06/CreateService
func (c *PaaS) CreateService(input *CreateServiceInput) (*CreateServiceOutput, error) {
	req, out := c.CreateServiceRequest(input)
	return out, req.Send()
}

// CreateServiceWithContext is the same as CreateService with the addition of
// the ability to pass a context and additional request options.
//
// See CreateService for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PaaS) CreateServiceWithContext(ctx aws.Context, input *CreateServiceInput, opts ...request.Option) (*CreateServiceOutput, error) {
	req, out := c.CreateServiceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteBackups = "DeleteBackups"

// DeleteBackupsRequest generates a "aws/request.Request" representing the
// client's request for the DeleteBackups operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteBackups for more information on using the DeleteBackups
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//	// Example sending a request using the DeleteBackupsRequest method.
//	req, resp := client.DeleteBackupsRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/paas-2022-09-06/DeleteBackups
func (c *PaaS) DeleteBackupsRequest(input *DeleteBackupsInput) (req *request.Request, output *DeleteBackupsOutput) {
	op := &request.Operation{
		Name:       opDeleteBackups,
		HTTPMethod: "DELETE",
		HTTPPath:   "/services/{serviceId}/backups",
	}

	if input == nil {
		input = &DeleteBackupsInput{}
	}

	output = &DeleteBackupsOutput{}
	req = c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)
	return
}

// DeleteBackups API operation for AWS PaaS.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS PaaS's
// API operation DeleteBackups for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/paas-2022-09-06/DeleteBackups
func (c *PaaS) DeleteBackups(input *DeleteBackupsInput) (*DeleteBackupsOutput, error) {
	req, out := c.DeleteBackupsRequest(input)
	return out, req.Send()
}

// DeleteBackupsWithContext is the same as DeleteBackups with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteBackups for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PaaS) DeleteBackupsWithContext(ctx aws.Context, input *DeleteBackupsInput, opts ...request.Option) (*DeleteBackupsOutput, error) {
	req, out := c.DeleteBackupsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteService = "DeleteService"

// DeleteServiceRequest generates a "aws/request.Request" representing the
// client's request for the DeleteService operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteService for more information on using the DeleteService
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//	// Example sending a request using the DeleteServiceRequest method.
//	req, resp := client.DeleteServiceRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/paas-2022-09-06/DeleteService
func (c *PaaS) DeleteServiceRequest(input *DeleteServiceInput) (req *request.Request, output *DeleteServiceOutput) {
	op := &request.Operation{
		Name:       opDeleteService,
		HTTPMethod: "DELETE",
		HTTPPath:   "/services/{serviceId}",
	}

	if input == nil {
		input = &DeleteServiceInput{}
	}

	output = &DeleteServiceOutput{}
	req = c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)
	return
}

// DeleteService API operation for AWS PaaS.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS PaaS's
// API operation DeleteService for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/paas-2022-09-06/DeleteService
func (c *PaaS) DeleteService(input *DeleteServiceInput) (*DeleteServiceOutput, error) {
	req, out := c.DeleteServiceRequest(input)
	return out, req.Send()
}

// DeleteServiceWithContext is the same as DeleteService with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteService for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PaaS) DeleteServiceWithContext(ctx aws.Context, input *DeleteServiceInput, opts ...request.Option) (*DeleteServiceOutput, error) {
	req, out := c.DeleteServiceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeBackup = "DescribeBackup"

// DescribeBackupRequest generates a "aws/request.Request" representing the
// client's request for the DescribeBackup operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeBackup for more information on using the DescribeBackup
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//	// Example sending a request using the DescribeBackupRequest method.
//	req, resp := client.DescribeBackupRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/paas-2022-09-06/DescribeBackup
func (c *PaaS) DescribeBackupRequest(input *DescribeBackupInput) (req *request.Request, output *DescribeBackupOutput) {
	op := &request.Operation{
		Name:       opDescribeBackup,
		HTTPMethod: "GET",
		HTTPPath:   "/backups/{backupId}",
	}

	if input == nil {
		input = &DescribeBackupInput{}
	}

	output = &DescribeBackupOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeBackup API operation for AWS PaaS.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS PaaS's
// API operation DescribeBackup for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/paas-2022-09-06/DescribeBackup
func (c *PaaS) DescribeBackup(input *DescribeBackupInput) (*DescribeBackupOutput, error) {
	req, out := c.DescribeBackupRequest(input)
	return out, req.Send()
}

// DescribeBackupWithContext is the same as DescribeBackup with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeBackup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PaaS) DescribeBackupWithContext(ctx aws.Context, input *DescribeBackupInput, opts ...request.Option) (*DescribeBackupOutput, error) {
	req, out := c.DescribeBackupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeService = "DescribeService"

// DescribeServiceRequest generates a "aws/request.Request" representing the
// client's request for the DescribeService operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeService for more information on using the DescribeService
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//	// Example sending a request using the DescribeServiceRequest method.
//	req, resp := client.DescribeServiceRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/paas-2022-09-06/DescribeService
func (c *PaaS) DescribeServiceRequest(input *DescribeServiceInput) (req *request.Request, output *DescribeServiceOutput) {
	op := &request.Operation{
		Name:       opDescribeService,
		HTTPMethod: "GET",
		HTTPPath:   "/services/{serviceId}",
	}

	if input == nil {
		input = &DescribeServiceInput{}
	}

	output = &DescribeServiceOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeService API operation for AWS PaaS.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS PaaS's
// API operation DescribeService for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/paas-2022-09-06/DescribeService
func (c *PaaS) DescribeService(input *DescribeServiceInput) (*DescribeServiceOutput, error) {
	req, out := c.DescribeServiceRequest(input)
	return out, req.Send()
}

// DescribeServiceWithContext is the same as DescribeService with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeService for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PaaS) DescribeServiceWithContext(ctx aws.Context, input *DescribeServiceInput, opts ...request.Option) (*DescribeServiceOutput, error) {
	req, out := c.DescribeServiceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListBackupUsers = "ListBackupUsers"

// ListBackupUsersRequest generates a "aws/request.Request" representing the
// client's request for the ListBackupUsers operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ListBackupUsers for more information on using the ListBackupUsers
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//	// Example sending a request using the ListBackupUsersRequest method.
//	req, resp := client.ListBackupUsersRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/paas-2022-09-06/ListBackupUsers
func (c *PaaS) ListBackupUsersRequest(input *ListBackupUsersInput) (req *request.Request, output *ListBackupUsersOutput) {
	op := &request.Operation{
		Name:       opListBackupUsers,
		HTTPMethod: "GET",
		HTTPPath:   "/backup-users",
	}

	if input == nil {
		input = &ListBackupUsersInput{}
	}

	output = &ListBackupUsersOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ListBackupUsers API operation for AWS PaaS.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS PaaS's
// API operation ListBackupUsers for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/paas-2022-09-06/ListBackupUsers
func (c *PaaS) ListBackupUsers(input *ListBackupUsersInput) (*ListBackupUsersOutput, error) {
	req, out := c.ListBackupUsersRequest(input)
	return out, req.Send()
}

// ListBackupUsersWithContext is the same as ListBackupUsers with the addition of
// the ability to pass a context and additional request options.
//
// See ListBackupUsers for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PaaS) ListBackupUsersWithContext(ctx aws.Context, input *ListBackupUsersInput, opts ...request.Option) (*ListBackupUsersOutput, error) {
	req, out := c.ListBackupUsersRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListBackups = "ListBackups"

// ListBackupsRequest generates a "aws/request.Request" representing the
// client's request for the ListBackups operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ListBackups for more information on using the ListBackups
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//	// Example sending a request using the ListBackupsRequest method.
//	req, resp := client.ListBackupsRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/paas-2022-09-06/ListBackups
func (c *PaaS) ListBackupsRequest(input *ListBackupsInput) (req *request.Request, output *ListBackupsOutput) {
	op := &request.Operation{
		Name:       opListBackups,
		HTTPMethod: "GET",
		HTTPPath:   "/backups",
	}

	if input == nil {
		input = &ListBackupsInput{}
	}

	output = &ListBackupsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ListBackups API operation for AWS PaaS.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS PaaS's
// API operation ListBackups for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/paas-2022-09-06/ListBackups
func (c *PaaS) ListBackups(input *ListBackupsInput) (*ListBackupsOutput, error) {
	req, out := c.ListBackupsRequest(input)
	return out, req.Send()
}

// ListBackupsWithContext is the same as ListBackups with the addition of
// the ability to pass a context and additional request options.
//
// See ListBackups for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PaaS) ListBackupsWithContext(ctx aws.Context, input *ListBackupsInput, opts ...request.Option) (*ListBackupsOutput, error) {
	req, out := c.ListBackupsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListServices = "ListServices"

// ListServicesRequest generates a "aws/request.Request" representing the
// client's request for the ListServices operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ListServices for more information on using the ListServices
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//	// Example sending a request using the ListServicesRequest method.
//	req, resp := client.ListServicesRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/paas-2022-09-06/ListServices
func (c *PaaS) ListServicesRequest(input *ListServicesInput) (req *request.Request, output *ListServicesOutput) {
	op := &request.Operation{
		Name:       opListServices,
		HTTPMethod: "GET",
		HTTPPath:   "/services",
	}

	if input == nil {
		input = &ListServicesInput{}
	}

	output = &ListServicesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ListServices API operation for AWS PaaS.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS PaaS's
// API operation ListServices for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/paas-2022-09-06/ListServices
func (c *PaaS) ListServices(input *ListServicesInput) (*ListServicesOutput, error) {
	req, out := c.ListServicesRequest(input)
	return out, req.Send()
}

// ListServicesWithContext is the same as ListServices with the addition of
// the ability to pass a context and additional request options.
//
// See ListServices for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PaaS) ListServicesWithContext(ctx aws.Context, input *ListServicesInput, opts ...request.Option) (*ListServicesOutput, error) {
	req, out := c.ListServicesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyBackup = "ModifyBackup"

// ModifyBackupRequest generates a "aws/request.Request" representing the
// client's request for the ModifyBackup operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ModifyBackup for more information on using the ModifyBackup
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//	// Example sending a request using the ModifyBackupRequest method.
//	req, resp := client.ModifyBackupRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/paas-2022-09-06/ModifyBackup
func (c *PaaS) ModifyBackupRequest(input *ModifyBackupInput) (req *request.Request, output *ModifyBackupOutput) {
	op := &request.Operation{
		Name:       opModifyBackup,
		HTTPMethod: "PUT",
		HTTPPath:   "/backups/{backupId}",
	}

	if input == nil {
		input = &ModifyBackupInput{}
	}

	output = &ModifyBackupOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ModifyBackup API operation for AWS PaaS.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS PaaS's
// API operation ModifyBackup for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/paas-2022-09-06/ModifyBackup
func (c *PaaS) ModifyBackup(input *ModifyBackupInput) (*ModifyBackupOutput, error) {
	req, out := c.ModifyBackupRequest(input)
	return out, req.Send()
}

// ModifyBackupWithContext is the same as ModifyBackup with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyBackup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PaaS) ModifyBackupWithContext(ctx aws.Context, input *ModifyBackupInput, opts ...request.Option) (*ModifyBackupOutput, error) {
	req, out := c.ModifyBackupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyService = "ModifyService"

// ModifyServiceRequest generates a "aws/request.Request" representing the
// client's request for the ModifyService operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ModifyService for more information on using the ModifyService
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//	// Example sending a request using the ModifyServiceRequest method.
//	req, resp := client.ModifyServiceRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/paas-2022-09-06/ModifyService
func (c *PaaS) ModifyServiceRequest(input *ModifyServiceInput) (req *request.Request, output *ModifyServiceOutput) {
	op := &request.Operation{
		Name:       opModifyService,
		HTTPMethod: "PUT",
		HTTPPath:   "/services/{serviceId}",
	}

	if input == nil {
		input = &ModifyServiceInput{}
	}

	output = &ModifyServiceOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ModifyService API operation for AWS PaaS.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS PaaS's
// API operation ModifyService for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/paas-2022-09-06/ModifyService
func (c *PaaS) ModifyService(input *ModifyServiceInput) (*ModifyServiceOutput, error) {
	req, out := c.ModifyServiceRequest(input)
	return out, req.Send()
}

// ModifyServiceWithContext is the same as ModifyService with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyService for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PaaS) ModifyServiceWithContext(ctx aws.Context, input *ModifyServiceInput, opts ...request.Option) (*ModifyServiceOutput, error) {
	req, out := c.ModifyServiceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyServiceParameters = "ModifyServiceParameters"

// ModifyServiceParametersRequest generates a "aws/request.Request" representing the
// client's request for the ModifyServiceParameters operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ModifyServiceParameters for more information on using the ModifyServiceParameters
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//	// Example sending a request using the ModifyServiceParametersRequest method.
//	req, resp := client.ModifyServiceParametersRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/paas-2022-09-06/ModifyServiceParameters
func (c *PaaS) ModifyServiceParametersRequest(input *ModifyServiceParametersInput) (req *request.Request, output *ModifyServiceParametersOutput) {
	op := &request.Operation{
		Name:       opModifyServiceParameters,
		HTTPMethod: "PUT",
		HTTPPath:   "/services/{serviceId}/parameters",
	}

	if input == nil {
		input = &ModifyServiceParametersInput{}
	}

	output = &ModifyServiceParametersOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ModifyServiceParameters API operation for AWS PaaS.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS PaaS's
// API operation ModifyServiceParameters for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/paas-2022-09-06/ModifyServiceParameters
func (c *PaaS) ModifyServiceParameters(input *ModifyServiceParametersInput) (*ModifyServiceParametersOutput, error) {
	req, out := c.ModifyServiceParametersRequest(input)
	return out, req.Send()
}

// ModifyServiceParametersWithContext is the same as ModifyServiceParameters with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyServiceParameters for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *PaaS) ModifyServiceParametersWithContext(ctx aws.Context, input *ModifyServiceParametersInput, opts ...request.Option) (*ModifyServiceParametersOutput, error) {
	req, out := c.ModifyServiceParametersRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type Backup struct {
	_ struct{} `type:"structure"`

	Databases []*DatabaseBackup `locationName:"databases" type:"list"`

	Id *string `locationName:"id" type:"string"`

	Protected *bool `locationName:"protected" type:"boolean"`

	ServiceClass *string `locationName:"serviceClass" type:"string"`

	ServiceDeleted *bool `locationName:"serviceDeleted" type:"boolean"`

	ServiceId *string `locationName:"serviceId" type:"string"`

	ServiceName *string `locationName:"serviceName" type:"string"`

	ServiceType *string `locationName:"serviceType" type:"string"`

	Status *string `locationName:"status" type:"string"`

	Time *int64 `locationName:"time" type:"integer"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s Backup) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s Backup) GoString() string {
	return s.String()
}

// SetDatabases sets the Databases field's value.
func (s *Backup) SetDatabases(v []*DatabaseBackup) *Backup {
	s.Databases = v
	return s
}

// SetId sets the Id field's value.
func (s *Backup) SetId(v string) *Backup {
	s.Id = &v
	return s
}

// SetProtected sets the Protected field's value.
func (s *Backup) SetProtected(v bool) *Backup {
	s.Protected = &v
	return s
}

// SetServiceClass sets the ServiceClass field's value.
func (s *Backup) SetServiceClass(v string) *Backup {
	s.ServiceClass = &v
	return s
}

// SetServiceDeleted sets the ServiceDeleted field's value.
func (s *Backup) SetServiceDeleted(v bool) *Backup {
	s.ServiceDeleted = &v
	return s
}

// SetServiceId sets the ServiceId field's value.
func (s *Backup) SetServiceId(v string) *Backup {
	s.ServiceId = &v
	return s
}

// SetServiceName sets the ServiceName field's value.
func (s *Backup) SetServiceName(v string) *Backup {
	s.ServiceName = &v
	return s
}

// SetServiceType sets the ServiceType field's value.
func (s *Backup) SetServiceType(v string) *Backup {
	s.ServiceType = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *Backup) SetStatus(v string) *Backup {
	s.Status = &v
	return s
}

// SetTime sets the Time field's value.
func (s *Backup) SetTime(v int64) *Backup {
	s.Time = &v
	return s
}

type BackupSettingsRequest struct {
	_ struct{} `type:"structure"`

	BackupExpirationDays *int64 `locationName:"backupExpirationDays" type:"integer"`

	BucketName *string `locationName:"bucketName" type:"string"`

	// Enabled is a required field
	Enabled *bool `locationName:"enabled" type:"boolean" required:"true"`

	NotificationEmail *string `locationName:"notificationEmail" type:"string"`

	StartTime *string `locationName:"startTime" type:"string"`

	UserLogin *string `locationName:"userLogin" type:"string"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s BackupSettingsRequest) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s BackupSettingsRequest) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *BackupSettingsRequest) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "BackupSettingsRequest"}
	if s.Enabled == nil {
		invalidParams.Add(request.NewErrParamRequired("Enabled"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBackupExpirationDays sets the BackupExpirationDays field's value.
func (s *BackupSettingsRequest) SetBackupExpirationDays(v int64) *BackupSettingsRequest {
	s.BackupExpirationDays = &v
	return s
}

// SetBucketName sets the BucketName field's value.
func (s *BackupSettingsRequest) SetBucketName(v string) *BackupSettingsRequest {
	s.BucketName = &v
	return s
}

// SetEnabled sets the Enabled field's value.
func (s *BackupSettingsRequest) SetEnabled(v bool) *BackupSettingsRequest {
	s.Enabled = &v
	return s
}

// SetNotificationEmail sets the NotificationEmail field's value.
func (s *BackupSettingsRequest) SetNotificationEmail(v string) *BackupSettingsRequest {
	s.NotificationEmail = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *BackupSettingsRequest) SetStartTime(v string) *BackupSettingsRequest {
	s.StartTime = &v
	return s
}

// SetUserLogin sets the UserLogin field's value.
func (s *BackupSettingsRequest) SetUserLogin(v string) *BackupSettingsRequest {
	s.UserLogin = &v
	return s
}

type BackupSettingsResponse struct {
	_ struct{} `type:"structure"`

	BackupExpirationDays *int64 `locationName:"backupExpirationDays" type:"integer"`

	BucketName *string `locationName:"bucketName" type:"string"`

	Enabled *bool `locationName:"enabled" type:"boolean"`

	NotificationEmail *string `locationName:"notificationEmail" type:"string"`

	StartTime *string `locationName:"startTime" type:"string"`

	UserId *string `locationName:"userId" type:"string"`

	UserLogin *string `locationName:"userLogin" type:"string"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s BackupSettingsResponse) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s BackupSettingsResponse) GoString() string {
	return s.String()
}

// SetBackupExpirationDays sets the BackupExpirationDays field's value.
func (s *BackupSettingsResponse) SetBackupExpirationDays(v int64) *BackupSettingsResponse {
	s.BackupExpirationDays = &v
	return s
}

// SetBucketName sets the BucketName field's value.
func (s *BackupSettingsResponse) SetBucketName(v string) *BackupSettingsResponse {
	s.BucketName = &v
	return s
}

// SetEnabled sets the Enabled field's value.
func (s *BackupSettingsResponse) SetEnabled(v bool) *BackupSettingsResponse {
	s.Enabled = &v
	return s
}

// SetNotificationEmail sets the NotificationEmail field's value.
func (s *BackupSettingsResponse) SetNotificationEmail(v string) *BackupSettingsResponse {
	s.NotificationEmail = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *BackupSettingsResponse) SetStartTime(v string) *BackupSettingsResponse {
	s.StartTime = &v
	return s
}

// SetUserId sets the UserId field's value.
func (s *BackupSettingsResponse) SetUserId(v string) *BackupSettingsResponse {
	s.UserId = &v
	return s
}

// SetUserLogin sets the UserLogin field's value.
func (s *BackupSettingsResponse) SetUserLogin(v string) *BackupSettingsResponse {
	s.UserLogin = &v
	return s
}

type BackupUser struct {
	_ struct{} `type:"structure"`

	Email *string `locationName:"email" type:"string"`

	Enabled *bool `locationName:"enabled" type:"boolean"`

	Id *string `locationName:"id" type:"string"`

	Login *string `locationName:"login" type:"string"`

	Name *string `locationName:"name" type:"string"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s BackupUser) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s BackupUser) GoString() string {
	return s.String()
}

// SetEmail sets the Email field's value.
func (s *BackupUser) SetEmail(v string) *BackupUser {
	s.Email = &v
	return s
}

// SetEnabled sets the Enabled field's value.
func (s *BackupUser) SetEnabled(v bool) *BackupUser {
	s.Enabled = &v
	return s
}

// SetId sets the Id field's value.
func (s *BackupUser) SetId(v string) *BackupUser {
	s.Id = &v
	return s
}

// SetLogin sets the Login field's value.
func (s *BackupUser) SetLogin(v string) *BackupUser {
	s.Login = &v
	return s
}

// SetName sets the Name field's value.
func (s *BackupUser) SetName(v string) *BackupUser {
	s.Name = &v
	return s
}

type CreateServiceInput struct {
	_ struct{} `type:"structure"`

	ArbitratorRequired *bool `locationName:"arbitratorRequired" type:"boolean"`

	BackupSettings *BackupSettingsRequest `locationName:"backupSettings" type:"structure"`

	DataVolumeIops *int64 `locationName:"dataVolumeIops" type:"integer"`

	DataVolumeSize *int64 `locationName:"dataVolumeSize" type:"integer"`

	DataVolumeType *string `locationName:"dataVolumeType" type:"string"`

	// HighAvailability is a required field
	HighAvailability *bool `locationName:"highAvailability" type:"boolean" required:"true"`

	// InstanceType is a required field
	InstanceType *string `locationName:"instanceType" type:"string" required:"true"`

	// Name is a required field
	Name *string `locationName:"name" type:"string" required:"true"`

	NetworkInterfaceIds []*string `locationName:"networkInterfaceIds" type:"list"`

	// Parameters is a required field
	Parameters map[string]interface{} `locationName:"parameters" type:"none" required:"true"`

	RootVolumeIops *int64 `locationName:"rootVolumeIops" type:"integer"`

	// RootVolumeSize is a required field
	RootVolumeSize *int64 `locationName:"rootVolumeSize" type:"integer" required:"true"`

	// RootVolumeType is a required field
	RootVolumeType *string `locationName:"rootVolumeType" type:"string" required:"true"`

	// SecurityGroupIds is a required field
	SecurityGroupIds []*string `locationName:"securityGroupIds" type:"list" required:"true"`

	// ServiceClass is a required field
	ServiceClass *string `locationName:"serviceClass" type:"string" required:"true"`

	// ServiceType is a required field
	ServiceType *string `locationName:"serviceType" type:"string" required:"true"`

	SshKeyName *string `locationName:"sshKeyName" type:"string"`

	SubnetIds []*string `locationName:"subnetIds" type:"list"`

	UserData *string `locationName:"userData" type:"string"`

	UserDataContentType *string `locationName:"userDataContentType" type:"string"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s CreateServiceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s CreateServiceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateServiceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateServiceInput"}
	if s.HighAvailability == nil {
		invalidParams.Add(request.NewErrParamRequired("HighAvailability"))
	}
	if s.InstanceType == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceType"))
	}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}
	if s.Parameters == nil {
		invalidParams.Add(request.NewErrParamRequired("Parameters"))
	}
	if s.RootVolumeSize == nil {
		invalidParams.Add(request.NewErrParamRequired("RootVolumeSize"))
	}
	if s.RootVolumeType == nil {
		invalidParams.Add(request.NewErrParamRequired("RootVolumeType"))
	}
	if s.SecurityGroupIds == nil {
		invalidParams.Add(request.NewErrParamRequired("SecurityGroupIds"))
	}
	if s.ServiceClass == nil {
		invalidParams.Add(request.NewErrParamRequired("ServiceClass"))
	}
	if s.ServiceType == nil {
		invalidParams.Add(request.NewErrParamRequired("ServiceType"))
	}
	if s.BackupSettings != nil {
		if err := s.BackupSettings.Validate(); err != nil {
			invalidParams.AddNested("BackupSettings", err.(request.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetArbitratorRequired sets the ArbitratorRequired field's value.
func (s *CreateServiceInput) SetArbitratorRequired(v bool) *CreateServiceInput {
	s.ArbitratorRequired = &v
	return s
}

// SetBackupSettings sets the BackupSettings field's value.
func (s *CreateServiceInput) SetBackupSettings(v *BackupSettingsRequest) *CreateServiceInput {
	s.BackupSettings = v
	return s
}

// SetDataVolumeIops sets the DataVolumeIops field's value.
func (s *CreateServiceInput) SetDataVolumeIops(v int64) *CreateServiceInput {
	s.DataVolumeIops = &v
	return s
}

// SetDataVolumeSize sets the DataVolumeSize field's value.
func (s *CreateServiceInput) SetDataVolumeSize(v int64) *CreateServiceInput {
	s.DataVolumeSize = &v
	return s
}

// SetDataVolumeType sets the DataVolumeType field's value.
func (s *CreateServiceInput) SetDataVolumeType(v string) *CreateServiceInput {
	s.DataVolumeType = &v
	return s
}

// SetHighAvailability sets the HighAvailability field's value.
func (s *CreateServiceInput) SetHighAvailability(v bool) *CreateServiceInput {
	s.HighAvailability = &v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *CreateServiceInput) SetInstanceType(v string) *CreateServiceInput {
	s.InstanceType = &v
	return s
}

// SetName sets the Name field's value.
func (s *CreateServiceInput) SetName(v string) *CreateServiceInput {
	s.Name = &v
	return s
}

// SetNetworkInterfaceIds sets the NetworkInterfaceIds field's value.
func (s *CreateServiceInput) SetNetworkInterfaceIds(v []*string) *CreateServiceInput {
	s.NetworkInterfaceIds = v
	return s
}

// SetParameters sets the Parameters field's value.
func (s *CreateServiceInput) SetParameters(v map[string]interface{}) *CreateServiceInput {
	s.Parameters = v
	return s
}

// SetRootVolumeIops sets the RootVolumeIops field's value.
func (s *CreateServiceInput) SetRootVolumeIops(v int64) *CreateServiceInput {
	s.RootVolumeIops = &v
	return s
}

// SetRootVolumeSize sets the RootVolumeSize field's value.
func (s *CreateServiceInput) SetRootVolumeSize(v int64) *CreateServiceInput {
	s.RootVolumeSize = &v
	return s
}

// SetRootVolumeType sets the RootVolumeType field's value.
func (s *CreateServiceInput) SetRootVolumeType(v string) *CreateServiceInput {
	s.RootVolumeType = &v
	return s
}

// SetSecurityGroupIds sets the SecurityGroupIds field's value.
func (s *CreateServiceInput) SetSecurityGroupIds(v []*string) *CreateServiceInput {
	s.SecurityGroupIds = v
	return s
}

// SetServiceClass sets the ServiceClass field's value.
func (s *CreateServiceInput) SetServiceClass(v string) *CreateServiceInput {
	s.ServiceClass = &v
	return s
}

// SetServiceType sets the ServiceType field's value.
func (s *CreateServiceInput) SetServiceType(v string) *CreateServiceInput {
	s.ServiceType = &v
	return s
}

// SetSshKeyName sets the SshKeyName field's value.
func (s *CreateServiceInput) SetSshKeyName(v string) *CreateServiceInput {
	s.SshKeyName = &v
	return s
}

// SetSubnetIds sets the SubnetIds field's value.
func (s *CreateServiceInput) SetSubnetIds(v []*string) *CreateServiceInput {
	s.SubnetIds = v
	return s
}

// SetUserData sets the UserData field's value.
func (s *CreateServiceInput) SetUserData(v string) *CreateServiceInput {
	s.UserData = &v
	return s
}

// SetUserDataContentType sets the UserDataContentType field's value.
func (s *CreateServiceInput) SetUserDataContentType(v string) *CreateServiceInput {
	s.UserDataContentType = &v
	return s
}

type CreateServiceOutput struct {
	_ struct{} `type:"structure"`

	Service *Service `locationName:"service" type:"structure"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s CreateServiceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s CreateServiceOutput) GoString() string {
	return s.String()
}

// SetService sets the Service field's value.
func (s *CreateServiceOutput) SetService(v *Service) *CreateServiceOutput {
	s.Service = v
	return s
}

type DatabaseBackup struct {
	_ struct{} `type:"structure"`

	BackupEnabled *bool `locationName:"backupEnabled" type:"boolean"`

	Id *string `locationName:"id" type:"string"`

	Location *string `locationName:"location" type:"string"`

	Logfile *string `locationName:"logfile" type:"string"`

	Name *string `locationName:"name" type:"string"`

	Parameters map[string]interface{} `locationName:"parameters" type:"none"`

	Size *int64 `locationName:"size" type:"integer"`

	Status *string `locationName:"status" type:"string"`

	Users []*UserResponse `locationName:"users" type:"list"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s DatabaseBackup) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s DatabaseBackup) GoString() string {
	return s.String()
}

// SetBackupEnabled sets the BackupEnabled field's value.
func (s *DatabaseBackup) SetBackupEnabled(v bool) *DatabaseBackup {
	s.BackupEnabled = &v
	return s
}

// SetId sets the Id field's value.
func (s *DatabaseBackup) SetId(v string) *DatabaseBackup {
	s.Id = &v
	return s
}

// SetLocation sets the Location field's value.
func (s *DatabaseBackup) SetLocation(v string) *DatabaseBackup {
	s.Location = &v
	return s
}

// SetLogfile sets the Logfile field's value.
func (s *DatabaseBackup) SetLogfile(v string) *DatabaseBackup {
	s.Logfile = &v
	return s
}

// SetName sets the Name field's value.
func (s *DatabaseBackup) SetName(v string) *DatabaseBackup {
	s.Name = &v
	return s
}

// SetParameters sets the Parameters field's value.
func (s *DatabaseBackup) SetParameters(v map[string]interface{}) *DatabaseBackup {
	s.Parameters = v
	return s
}

// SetSize sets the Size field's value.
func (s *DatabaseBackup) SetSize(v int64) *DatabaseBackup {
	s.Size = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DatabaseBackup) SetStatus(v string) *DatabaseBackup {
	s.Status = &v
	return s
}

// SetUsers sets the Users field's value.
func (s *DatabaseBackup) SetUsers(v []*UserResponse) *DatabaseBackup {
	s.Users = v
	return s
}

type DatabaseCreateRequest struct {
	_ struct{} `type:"structure"`

	BackupEnabled *bool `locationName:"backupEnabled" type:"boolean"`

	// Name is a required field
	Name *string `locationName:"name" type:"string" required:"true"`

	Parameters map[string]interface{} `locationName:"parameters" type:"none"`

	Users []*UserCreateRequest `locationName:"users" type:"list"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s DatabaseCreateRequest) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s DatabaseCreateRequest) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DatabaseCreateRequest) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DatabaseCreateRequest"}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}
	if s.Users != nil {
		for i, v := range s.Users {
			if v == nil {
				continue
			}
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "Users", i), err.(request.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBackupEnabled sets the BackupEnabled field's value.
func (s *DatabaseCreateRequest) SetBackupEnabled(v bool) *DatabaseCreateRequest {
	s.BackupEnabled = &v
	return s
}

// SetName sets the Name field's value.
func (s *DatabaseCreateRequest) SetName(v string) *DatabaseCreateRequest {
	s.Name = &v
	return s
}

// SetParameters sets the Parameters field's value.
func (s *DatabaseCreateRequest) SetParameters(v map[string]interface{}) *DatabaseCreateRequest {
	s.Parameters = v
	return s
}

// SetUsers sets the Users field's value.
func (s *DatabaseCreateRequest) SetUsers(v []*UserCreateRequest) *DatabaseCreateRequest {
	s.Users = v
	return s
}

type DatabaseResponse struct {
	_ struct{} `type:"structure"`

	BackupEnabled *bool `locationName:"backupEnabled" type:"boolean"`

	Id *string `locationName:"id" type:"string"`

	// Name is a required field
	Name *string `locationName:"name" type:"string" required:"true"`

	Parameters map[string]interface{} `locationName:"parameters" type:"none"`

	Users []*UserResponse `locationName:"users" type:"list"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s DatabaseResponse) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s DatabaseResponse) GoString() string {
	return s.String()
}

// SetBackupEnabled sets the BackupEnabled field's value.
func (s *DatabaseResponse) SetBackupEnabled(v bool) *DatabaseResponse {
	s.BackupEnabled = &v
	return s
}

// SetId sets the Id field's value.
func (s *DatabaseResponse) SetId(v string) *DatabaseResponse {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *DatabaseResponse) SetName(v string) *DatabaseResponse {
	s.Name = &v
	return s
}

// SetParameters sets the Parameters field's value.
func (s *DatabaseResponse) SetParameters(v map[string]interface{}) *DatabaseResponse {
	s.Parameters = v
	return s
}

// SetUsers sets the Users field's value.
func (s *DatabaseResponse) SetUsers(v []*UserResponse) *DatabaseResponse {
	s.Users = v
	return s
}

type DeleteBackupsInput struct {
	_ struct{} `type:"structure"`

	BackupIds []*string `locationName:"backupIds" type:"list"`

	// ServiceId is a required field
	ServiceId *string `location:"uri" locationName:"serviceId" type:"string" required:"true"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s DeleteBackupsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s DeleteBackupsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteBackupsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteBackupsInput"}
	if s.ServiceId == nil {
		invalidParams.Add(request.NewErrParamRequired("ServiceId"))
	}
	if s.ServiceId != nil && len(*s.ServiceId) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ServiceId", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBackupIds sets the BackupIds field's value.
func (s *DeleteBackupsInput) SetBackupIds(v []*string) *DeleteBackupsInput {
	s.BackupIds = v
	return s
}

// SetServiceId sets the ServiceId field's value.
func (s *DeleteBackupsInput) SetServiceId(v string) *DeleteBackupsInput {
	s.ServiceId = &v
	return s
}

type DeleteBackupsOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s DeleteBackupsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s DeleteBackupsOutput) GoString() string {
	return s.String()
}

type DeleteServiceInput struct {
	_ struct{} `type:"structure"`

	// DeleteInterfaces is a required field
	DeleteInterfaces *bool `locationName:"deleteInterfaces" type:"boolean" required:"true"`

	// ServiceId is a required field
	ServiceId *string `location:"uri" locationName:"serviceId" type:"string" required:"true"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s DeleteServiceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s DeleteServiceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteServiceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteServiceInput"}
	if s.DeleteInterfaces == nil {
		invalidParams.Add(request.NewErrParamRequired("DeleteInterfaces"))
	}
	if s.ServiceId == nil {
		invalidParams.Add(request.NewErrParamRequired("ServiceId"))
	}
	if s.ServiceId != nil && len(*s.ServiceId) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ServiceId", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDeleteInterfaces sets the DeleteInterfaces field's value.
func (s *DeleteServiceInput) SetDeleteInterfaces(v bool) *DeleteServiceInput {
	s.DeleteInterfaces = &v
	return s
}

// SetServiceId sets the ServiceId field's value.
func (s *DeleteServiceInput) SetServiceId(v string) *DeleteServiceInput {
	s.ServiceId = &v
	return s
}

type DeleteServiceOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s DeleteServiceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s DeleteServiceOutput) GoString() string {
	return s.String()
}

type DescribeBackupInput struct {
	_ struct{} `type:"structure" nopayload:"true"`

	// BackupId is a required field
	BackupId *string `location:"uri" locationName:"backupId" type:"string" required:"true"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s DescribeBackupInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s DescribeBackupInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeBackupInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeBackupInput"}
	if s.BackupId == nil {
		invalidParams.Add(request.NewErrParamRequired("BackupId"))
	}
	if s.BackupId != nil && len(*s.BackupId) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("BackupId", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBackupId sets the BackupId field's value.
func (s *DescribeBackupInput) SetBackupId(v string) *DescribeBackupInput {
	s.BackupId = &v
	return s
}

type DescribeBackupOutput struct {
	_ struct{} `type:"structure"`

	Backup *Backup `locationName:"backup" type:"structure"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s DescribeBackupOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s DescribeBackupOutput) GoString() string {
	return s.String()
}

// SetBackup sets the Backup field's value.
func (s *DescribeBackupOutput) SetBackup(v *Backup) *DescribeBackupOutput {
	s.Backup = v
	return s
}

type DescribeServiceInput struct {
	_ struct{} `type:"structure" nopayload:"true"`

	// ServiceId is a required field
	ServiceId *string `location:"uri" locationName:"serviceId" type:"string" required:"true"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s DescribeServiceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s DescribeServiceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeServiceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeServiceInput"}
	if s.ServiceId == nil {
		invalidParams.Add(request.NewErrParamRequired("ServiceId"))
	}
	if s.ServiceId != nil && len(*s.ServiceId) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ServiceId", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetServiceId sets the ServiceId field's value.
func (s *DescribeServiceInput) SetServiceId(v string) *DescribeServiceInput {
	s.ServiceId = &v
	return s
}

type DescribeServiceOutput struct {
	_ struct{} `type:"structure"`

	Service *Service `locationName:"service" type:"structure"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s DescribeServiceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s DescribeServiceOutput) GoString() string {
	return s.String()
}

// SetService sets the Service field's value.
func (s *DescribeServiceOutput) SetService(v *Service) *DescribeServiceOutput {
	s.Service = v
	return s
}

type Instance struct {
	_ struct{} `type:"structure"`

	Endpoint *string `locationName:"endpoint" type:"string"`

	Index *int64 `locationName:"index" type:"integer"`

	InstanceId *string `locationName:"instanceId" type:"string"`

	InterfaceId *string `locationName:"interfaceId" type:"string"`

	Name *string `locationName:"name" type:"string"`

	PrivateIp *string `locationName:"privateIp" type:"string"`

	Role *string `locationName:"role" type:"string"`

	Status *string `locationName:"status" type:"string"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s Instance) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s Instance) GoString() string {
	return s.String()
}

// SetEndpoint sets the Endpoint field's value.
func (s *Instance) SetEndpoint(v string) *Instance {
	s.Endpoint = &v
	return s
}

// SetIndex sets the Index field's value.
func (s *Instance) SetIndex(v int64) *Instance {
	s.Index = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *Instance) SetInstanceId(v string) *Instance {
	s.InstanceId = &v
	return s
}

// SetInterfaceId sets the InterfaceId field's value.
func (s *Instance) SetInterfaceId(v string) *Instance {
	s.InterfaceId = &v
	return s
}

// SetName sets the Name field's value.
func (s *Instance) SetName(v string) *Instance {
	s.Name = &v
	return s
}

// SetPrivateIp sets the PrivateIp field's value.
func (s *Instance) SetPrivateIp(v string) *Instance {
	s.PrivateIp = &v
	return s
}

// SetRole sets the Role field's value.
func (s *Instance) SetRole(v string) *Instance {
	s.Role = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *Instance) SetStatus(v string) *Instance {
	s.Status = &v
	return s
}

type ListBackupUsersInput struct {
	_ struct{} `type:"structure" nopayload:"true"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ListBackupUsersInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ListBackupUsersInput) GoString() string {
	return s.String()
}

type ListBackupUsersOutput struct {
	_ struct{} `type:"structure"`

	Users []*BackupUser `locationName:"users" type:"list"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ListBackupUsersOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ListBackupUsersOutput) GoString() string {
	return s.String()
}

// SetUsers sets the Users field's value.
func (s *ListBackupUsersOutput) SetUsers(v []*BackupUser) *ListBackupUsersOutput {
	s.Users = v
	return s
}

type ListBackupsInput struct {
	_ struct{} `type:"structure"`

	ServiceClass *string `locationName:"serviceClass" type:"string"`

	ServiceId *string `locationName:"serviceId" type:"string"`

	ServiceType *string `locationName:"serviceType" type:"string"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ListBackupsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ListBackupsInput) GoString() string {
	return s.String()
}

// SetServiceClass sets the ServiceClass field's value.
func (s *ListBackupsInput) SetServiceClass(v string) *ListBackupsInput {
	s.ServiceClass = &v
	return s
}

// SetServiceId sets the ServiceId field's value.
func (s *ListBackupsInput) SetServiceId(v string) *ListBackupsInput {
	s.ServiceId = &v
	return s
}

// SetServiceType sets the ServiceType field's value.
func (s *ListBackupsInput) SetServiceType(v string) *ListBackupsInput {
	s.ServiceType = &v
	return s
}

type ListBackupsOutput struct {
	_ struct{} `type:"structure"`

	Backups []*Backup `locationName:"backups" type:"list"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ListBackupsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ListBackupsOutput) GoString() string {
	return s.String()
}

// SetBackups sets the Backups field's value.
func (s *ListBackupsOutput) SetBackups(v []*Backup) *ListBackupsOutput {
	s.Backups = v
	return s
}

type ListServiceItem struct {
	_ struct{} `type:"structure"`

	ErrorCode *string `locationName:"errorCode" type:"string"`

	Id *string `locationName:"id" type:"string"`

	Name *string `locationName:"name" type:"string"`

	ServiceClass *string `locationName:"serviceClass" type:"string"`

	ServiceType *string `locationName:"serviceType" type:"string"`

	ServiceTypeCaption *string `locationName:"serviceTypeCaption" type:"string"`

	Status *string `locationName:"status" type:"string"`

	TotalCpuCount *int64 `locationName:"totalCpuCount" type:"integer"`

	TotalMemory *int64 `locationName:"totalMemory" type:"integer"`

	Version *string `locationName:"version" type:"string"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ListServiceItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ListServiceItem) GoString() string {
	return s.String()
}

// SetErrorCode sets the ErrorCode field's value.
func (s *ListServiceItem) SetErrorCode(v string) *ListServiceItem {
	s.ErrorCode = &v
	return s
}

// SetId sets the Id field's value.
func (s *ListServiceItem) SetId(v string) *ListServiceItem {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *ListServiceItem) SetName(v string) *ListServiceItem {
	s.Name = &v
	return s
}

// SetServiceClass sets the ServiceClass field's value.
func (s *ListServiceItem) SetServiceClass(v string) *ListServiceItem {
	s.ServiceClass = &v
	return s
}

// SetServiceType sets the ServiceType field's value.
func (s *ListServiceItem) SetServiceType(v string) *ListServiceItem {
	s.ServiceType = &v
	return s
}

// SetServiceTypeCaption sets the ServiceTypeCaption field's value.
func (s *ListServiceItem) SetServiceTypeCaption(v string) *ListServiceItem {
	s.ServiceTypeCaption = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ListServiceItem) SetStatus(v string) *ListServiceItem {
	s.Status = &v
	return s
}

// SetTotalCpuCount sets the TotalCpuCount field's value.
func (s *ListServiceItem) SetTotalCpuCount(v int64) *ListServiceItem {
	s.TotalCpuCount = &v
	return s
}

// SetTotalMemory sets the TotalMemory field's value.
func (s *ListServiceItem) SetTotalMemory(v int64) *ListServiceItem {
	s.TotalMemory = &v
	return s
}

// SetVersion sets the Version field's value.
func (s *ListServiceItem) SetVersion(v string) *ListServiceItem {
	s.Version = &v
	return s
}

type ListServicesInput struct {
	_ struct{} `type:"structure"`

	ServiceClass *string `locationName:"serviceClass" type:"string"`

	ServiceType *string `locationName:"serviceType" type:"string"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ListServicesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ListServicesInput) GoString() string {
	return s.String()
}

// SetServiceClass sets the ServiceClass field's value.
func (s *ListServicesInput) SetServiceClass(v string) *ListServicesInput {
	s.ServiceClass = &v
	return s
}

// SetServiceType sets the ServiceType field's value.
func (s *ListServicesInput) SetServiceType(v string) *ListServicesInput {
	s.ServiceType = &v
	return s
}

type ListServicesOutput struct {
	_ struct{} `type:"structure"`

	Services []*ListServiceItem `locationName:"services" type:"list"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ListServicesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ListServicesOutput) GoString() string {
	return s.String()
}

// SetServices sets the Services field's value.
func (s *ListServicesOutput) SetServices(v []*ListServiceItem) *ListServicesOutput {
	s.Services = v
	return s
}

type ModifyBackupInput struct {
	_ struct{} `type:"structure"`

	// BackupId is a required field
	BackupId *string `location:"uri" locationName:"backupId" type:"string" required:"true"`

	Protected *bool `locationName:"protected" type:"boolean"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ModifyBackupInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ModifyBackupInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyBackupInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyBackupInput"}
	if s.BackupId == nil {
		invalidParams.Add(request.NewErrParamRequired("BackupId"))
	}
	if s.BackupId != nil && len(*s.BackupId) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("BackupId", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBackupId sets the BackupId field's value.
func (s *ModifyBackupInput) SetBackupId(v string) *ModifyBackupInput {
	s.BackupId = &v
	return s
}

// SetProtected sets the Protected field's value.
func (s *ModifyBackupInput) SetProtected(v bool) *ModifyBackupInput {
	s.Protected = &v
	return s
}

type ModifyBackupOutput struct {
	_ struct{} `type:"structure"`

	Backup *Backup `locationName:"backup" type:"structure"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ModifyBackupOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ModifyBackupOutput) GoString() string {
	return s.String()
}

// SetBackup sets the Backup field's value.
func (s *ModifyBackupOutput) SetBackup(v *Backup) *ModifyBackupOutput {
	s.Backup = v
	return s
}

type ModifyServiceInput struct {
	_ struct{} `type:"structure"`

	BackupSettings *BackupSettingsRequest `locationName:"backupSettings" type:"structure"`

	Databases []*DatabaseCreateRequest `locationName:"databases" type:"list"`

	// ServiceId is a required field
	ServiceId *string `location:"uri" locationName:"serviceId" type:"string" required:"true"`

	Users []*UserCreateRequest `locationName:"users" type:"list"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ModifyServiceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ModifyServiceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyServiceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyServiceInput"}
	if s.ServiceId == nil {
		invalidParams.Add(request.NewErrParamRequired("ServiceId"))
	}
	if s.ServiceId != nil && len(*s.ServiceId) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ServiceId", 1))
	}
	if s.BackupSettings != nil {
		if err := s.BackupSettings.Validate(); err != nil {
			invalidParams.AddNested("BackupSettings", err.(request.ErrInvalidParams))
		}
	}
	if s.Databases != nil {
		for i, v := range s.Databases {
			if v == nil {
				continue
			}
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "Databases", i), err.(request.ErrInvalidParams))
			}
		}
	}
	if s.Users != nil {
		for i, v := range s.Users {
			if v == nil {
				continue
			}
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "Users", i), err.(request.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBackupSettings sets the BackupSettings field's value.
func (s *ModifyServiceInput) SetBackupSettings(v *BackupSettingsRequest) *ModifyServiceInput {
	s.BackupSettings = v
	return s
}

// SetDatabases sets the Databases field's value.
func (s *ModifyServiceInput) SetDatabases(v []*DatabaseCreateRequest) *ModifyServiceInput {
	s.Databases = v
	return s
}

// SetServiceId sets the ServiceId field's value.
func (s *ModifyServiceInput) SetServiceId(v string) *ModifyServiceInput {
	s.ServiceId = &v
	return s
}

// SetUsers sets the Users field's value.
func (s *ModifyServiceInput) SetUsers(v []*UserCreateRequest) *ModifyServiceInput {
	s.Users = v
	return s
}

type ModifyServiceOutput struct {
	_ struct{} `type:"structure"`

	Service *Service `locationName:"service" type:"structure"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ModifyServiceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ModifyServiceOutput) GoString() string {
	return s.String()
}

// SetService sets the Service field's value.
func (s *ModifyServiceOutput) SetService(v *Service) *ModifyServiceOutput {
	s.Service = v
	return s
}

type ModifyServiceParametersInput struct {
	_ struct{} `type:"structure"`

	// Parameters is a required field
	Parameters map[string]interface{} `locationName:"parameters" type:"none" required:"true"`

	// ServiceId is a required field
	ServiceId *string `location:"uri" locationName:"serviceId" type:"string" required:"true"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ModifyServiceParametersInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ModifyServiceParametersInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyServiceParametersInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyServiceParametersInput"}
	if s.Parameters == nil {
		invalidParams.Add(request.NewErrParamRequired("Parameters"))
	}
	if s.ServiceId == nil {
		invalidParams.Add(request.NewErrParamRequired("ServiceId"))
	}
	if s.ServiceId != nil && len(*s.ServiceId) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ServiceId", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetParameters sets the Parameters field's value.
func (s *ModifyServiceParametersInput) SetParameters(v map[string]interface{}) *ModifyServiceParametersInput {
	s.Parameters = v
	return s
}

// SetServiceId sets the ServiceId field's value.
func (s *ModifyServiceParametersInput) SetServiceId(v string) *ModifyServiceParametersInput {
	s.ServiceId = &v
	return s
}

type ModifyServiceParametersOutput struct {
	_ struct{} `type:"structure"`

	Service *Service `locationName:"service" type:"structure"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ModifyServiceParametersOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s ModifyServiceParametersOutput) GoString() string {
	return s.String()
}

// SetService sets the Service field's value.
func (s *ModifyServiceParametersOutput) SetService(v *Service) *ModifyServiceParametersOutput {
	s.Service = v
	return s
}

type SecurityGroup struct {
	_ struct{} `type:"structure"`

	CreatedAutomatically *bool `locationName:"createdAutomatically" type:"boolean"`

	Id *string `locationName:"id" type:"string"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s SecurityGroup) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s SecurityGroup) GoString() string {
	return s.String()
}

// SetCreatedAutomatically sets the CreatedAutomatically field's value.
func (s *SecurityGroup) SetCreatedAutomatically(v bool) *SecurityGroup {
	s.CreatedAutomatically = &v
	return s
}

// SetId sets the Id field's value.
func (s *SecurityGroup) SetId(v string) *SecurityGroup {
	s.Id = &v
	return s
}

type Service struct {
	_ struct{} `type:"structure"`

	BackupSettings *BackupSettingsResponse `locationName:"backupSettings" type:"structure"`

	DataVolumeIops *int64 `locationName:"dataVolumeIops" type:"integer"`

	DataVolumeSize *int64 `locationName:"dataVolumeSize" type:"integer"`

	DataVolumeType *string `locationName:"dataVolumeType" type:"string"`

	Databases []*DatabaseResponse `locationName:"databases" type:"list"`

	Endpoints []*string `locationName:"endpoints" type:"list"`

	ErrorCode *string `locationName:"errorCode" type:"string"`

	ErrorDescription *string `locationName:"errorDescription" type:"string"`

	HighAvailability *bool `locationName:"highAvailability" type:"boolean"`

	Id *string `locationName:"id" type:"string"`

	InstanceType *string `locationName:"instanceType" type:"string"`

	Instances []*Instance `locationName:"instances" type:"list"`

	IsRolledBack *bool `locationName:"isRolledBack" type:"boolean"`

	Name *string `locationName:"name" type:"string"`

	NetworkInterfaceIds []*string `locationName:"networkInterfaceIds" type:"list"`

	Parameters map[string]interface{} `locationName:"parameters" type:"none"`

	RootVolumeIops *int64 `locationName:"rootVolumeIops" type:"integer"`

	RootVolumeSize *int64 `locationName:"rootVolumeSize" type:"integer"`

	RootVolumeType *string `locationName:"rootVolumeType" type:"string"`

	SecurityGroups []*SecurityGroup `locationName:"securityGroups" type:"list"`

	ServiceClass *string `locationName:"serviceClass" type:"string"`

	ServiceType *string `locationName:"serviceType" type:"string"`

	SshKeyName *string `locationName:"sshKeyName" type:"string"`

	Status *string `locationName:"status" type:"string"`

	SubnetIds []*string `locationName:"subnetIds" type:"list"`

	SupportedFeatures []*string `locationName:"supportedFeatures" type:"list"`

	TotalCpuCount *int64 `locationName:"totalCpuCount" type:"integer"`

	TotalMemory *int64 `locationName:"totalMemory" type:"integer"`

	Users []*UserResponse `locationName:"users" type:"list"`

	VpcId *string `locationName:"vpcId" type:"string"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s Service) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s Service) GoString() string {
	return s.String()
}

// SetBackupSettings sets the BackupSettings field's value.
func (s *Service) SetBackupSettings(v *BackupSettingsResponse) *Service {
	s.BackupSettings = v
	return s
}

// SetDataVolumeIops sets the DataVolumeIops field's value.
func (s *Service) SetDataVolumeIops(v int64) *Service {
	s.DataVolumeIops = &v
	return s
}

// SetDataVolumeSize sets the DataVolumeSize field's value.
func (s *Service) SetDataVolumeSize(v int64) *Service {
	s.DataVolumeSize = &v
	return s
}

// SetDataVolumeType sets the DataVolumeType field's value.
func (s *Service) SetDataVolumeType(v string) *Service {
	s.DataVolumeType = &v
	return s
}

// SetDatabases sets the Databases field's value.
func (s *Service) SetDatabases(v []*DatabaseResponse) *Service {
	s.Databases = v
	return s
}

// SetEndpoints sets the Endpoints field's value.
func (s *Service) SetEndpoints(v []*string) *Service {
	s.Endpoints = v
	return s
}

// SetErrorCode sets the ErrorCode field's value.
func (s *Service) SetErrorCode(v string) *Service {
	s.ErrorCode = &v
	return s
}

// SetErrorDescription sets the ErrorDescription field's value.
func (s *Service) SetErrorDescription(v string) *Service {
	s.ErrorDescription = &v
	return s
}

// SetHighAvailability sets the HighAvailability field's value.
func (s *Service) SetHighAvailability(v bool) *Service {
	s.HighAvailability = &v
	return s
}

// SetId sets the Id field's value.
func (s *Service) SetId(v string) *Service {
	s.Id = &v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *Service) SetInstanceType(v string) *Service {
	s.InstanceType = &v
	return s
}

// SetInstances sets the Instances field's value.
func (s *Service) SetInstances(v []*Instance) *Service {
	s.Instances = v
	return s
}

// SetIsRolledBack sets the IsRolledBack field's value.
func (s *Service) SetIsRolledBack(v bool) *Service {
	s.IsRolledBack = &v
	return s
}

// SetName sets the Name field's value.
func (s *Service) SetName(v string) *Service {
	s.Name = &v
	return s
}

// SetNetworkInterfaceIds sets the NetworkInterfaceIds field's value.
func (s *Service) SetNetworkInterfaceIds(v []*string) *Service {
	s.NetworkInterfaceIds = v
	return s
}

// SetParameters sets the Parameters field's value.
func (s *Service) SetParameters(v map[string]interface{}) *Service {
	s.Parameters = v
	return s
}

// SetRootVolumeIops sets the RootVolumeIops field's value.
func (s *Service) SetRootVolumeIops(v int64) *Service {
	s.RootVolumeIops = &v
	return s
}

// SetRootVolumeSize sets the RootVolumeSize field's value.
func (s *Service) SetRootVolumeSize(v int64) *Service {
	s.RootVolumeSize = &v
	return s
}

// SetRootVolumeType sets the RootVolumeType field's value.
func (s *Service) SetRootVolumeType(v string) *Service {
	s.RootVolumeType = &v
	return s
}

// SetSecurityGroups sets the SecurityGroups field's value.
func (s *Service) SetSecurityGroups(v []*SecurityGroup) *Service {
	s.SecurityGroups = v
	return s
}

// SetServiceClass sets the ServiceClass field's value.
func (s *Service) SetServiceClass(v string) *Service {
	s.ServiceClass = &v
	return s
}

// SetServiceType sets the ServiceType field's value.
func (s *Service) SetServiceType(v string) *Service {
	s.ServiceType = &v
	return s
}

// SetSshKeyName sets the SshKeyName field's value.
func (s *Service) SetSshKeyName(v string) *Service {
	s.SshKeyName = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *Service) SetStatus(v string) *Service {
	s.Status = &v
	return s
}

// SetSubnetIds sets the SubnetIds field's value.
func (s *Service) SetSubnetIds(v []*string) *Service {
	s.SubnetIds = v
	return s
}

// SetSupportedFeatures sets the SupportedFeatures field's value.
func (s *Service) SetSupportedFeatures(v []*string) *Service {
	s.SupportedFeatures = v
	return s
}

// SetTotalCpuCount sets the TotalCpuCount field's value.
func (s *Service) SetTotalCpuCount(v int64) *Service {
	s.TotalCpuCount = &v
	return s
}

// SetTotalMemory sets the TotalMemory field's value.
func (s *Service) SetTotalMemory(v int64) *Service {
	s.TotalMemory = &v
	return s
}

// SetUsers sets the Users field's value.
func (s *Service) SetUsers(v []*UserResponse) *Service {
	s.Users = v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *Service) SetVpcId(v string) *Service {
	s.VpcId = &v
	return s
}

type UserCreateRequest struct {
	_ struct{} `type:"structure"`

	// Name is a required field
	Name *string `locationName:"name" type:"string" required:"true"`

	Parameters map[string]interface{} `locationName:"parameters" type:"none"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s UserCreateRequest) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s UserCreateRequest) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UserCreateRequest) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UserCreateRequest"}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetName sets the Name field's value.
func (s *UserCreateRequest) SetName(v string) *UserCreateRequest {
	s.Name = &v
	return s
}

// SetParameters sets the Parameters field's value.
func (s *UserCreateRequest) SetParameters(v map[string]interface{}) *UserCreateRequest {
	s.Parameters = v
	return s
}

type UserResponse struct {
	_ struct{} `type:"structure"`

	Id *string `locationName:"id" type:"string"`

	// Name is a required field
	Name *string `locationName:"name" type:"string" required:"true"`

	Parameters map[string]interface{} `locationName:"parameters" type:"none"`
}

// String returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s UserResponse) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation.
//
// API parameter values that are decorated as "sensitive" in the API will not
// be included in the string output. The member name will be present, but the
// value will be replaced with "sensitive".
func (s UserResponse) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *UserResponse) SetId(v string) *UserResponse {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *UserResponse) SetName(v string) *UserResponse {
	s.Name = &v
	return s
}

// SetParameters sets the Parameters field's value.
func (s *UserResponse) SetParameters(v map[string]interface{}) *UserResponse {
	s.Parameters = v
	return s
}
